[
  {
    "id": "website",
    "title": "A full stack website: Daniel's Lab",
    "coverUrl": "https://raw.githubusercontent.com/danielxfeng/blog-content/refs/heads/main/media/A-Full-Stack-Website-Daniels-Lab/A-Full-Stack-Website-Daniels-Lab.cover.jpg",
    "description": "A modern, full-stack portfolio site featuring a custom-built blogging system with full-text search and authentication from scratch.\n- **Modular backend**: Node.js, PostgreSQL, Zod, Meilisearch\n- **Reactive frontend**: React, Tailwind CSS, Zustand, Shadcn UI, Framer Motion",
    "stack": ["Node.js", "React", "TypeScript", "PostgreSQL"],
    "projectLink": "https://danielslab.dev/blog/posts/a-full-stack-website-daniels-lab",
    "siteLink": "https://danielslab.dev/blog/posts/a-full-stack-website-daniels-lab",
    "hasSite": true,
    "tags": ["web-dev", "fullstack", "ts", "react", "node", "frontend", "backend", "ci/cd"]
  },
  {
    "id": "go-worker",
    "title": "Async Job System in Go",
    "coverUrl": "https://picsum.photos/1200/600?random=7",
    "description": "A lightweight async job system written in **Go**, used across my projects to handle background tasks through **Redis** queues.\n- In the blog platform, it updates **Meilisearch** indexes without blocking the main app\n- it buffers inference requests via a **queue** to prevent **concurrency** issues caused by high memory usage during model execution",
    "stack": ["Go", "Redis", "Message Queue", "Concurrency"],
    "projectLink": "https://www.google.com/?q=sss",
    "siteLink": "https://www.google.com/?q=sss",
    "hasSite": false,
    "tags": [
      "ai",
      "machine_learning",
      "python",
      "cnn",
      "pytorch",
      "transfer_learning",
      "backend",
      "fastapi",
      "data"
    ]
  },
  {
    "id": "gravity-particles",
    "title": "Interactive Particle Field",
    "coverUrl": "https://picsum.photos/1200/600?random=8",
    "description": "A simple particle toy built with **Three.js** and **React Three Fiber**, inspired by my earlier ray tracing project **mini-rt** at Hive Helsinki.\n- Uses **instanced meshes** to efficiently render 2000+ rotating particles\n- Global rotation responds to mouse position via `useFrame`\n- Modularly designed for future expansion into a fullscreen reactive visual layer",
    "stack": ["React", "R3F", "Three.js", "WebGL"],
    "projectLink": "https://www.google.com/?q=sss",
    "siteLink": "https://www.google.com/?q=sss",
    "hasSite": true,
    "tags": ["frontend", "3d", "three.js", "react"]
  }
]
